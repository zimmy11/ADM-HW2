{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "c9bdf566-6d68-403e-9112-a9b457464666",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Requirement already satisfied: textblob in ./anaconda3/lib/python3.11/site-packages (0.18.0.post0)\n",
      "Requirement already satisfied: nltk>=3.8 in ./anaconda3/lib/python3.11/site-packages (from textblob) (3.8.1)\n",
      "Requirement already satisfied: click in ./anaconda3/lib/python3.11/site-packages (from nltk>=3.8->textblob) (8.0.4)\n",
      "Requirement already satisfied: joblib in ./anaconda3/lib/python3.11/site-packages (from nltk>=3.8->textblob) (1.2.0)\n",
      "Requirement already satisfied: regex>=2021.8.3 in ./anaconda3/lib/python3.11/site-packages (from nltk>=3.8->textblob) (2022.7.9)\n",
      "Requirement already satisfied: tqdm in ./anaconda3/lib/python3.11/site-packages (from nltk>=3.8->textblob) (4.65.0)\n",
      "Note: you may need to restart the kernel to use updated packages.\n"
     ]
    }
   ],
   "source": [
    "%pip install textblob\n",
    "\n",
    "#Import The Libraries to manage and plot data\n",
    "%matplotlib inline\n",
    "import pandas as pd \n",
    "import matplotlib.pyplot as plt\n",
    "import numpy as np\n",
    "import seaborn as sns\n",
    "import importlib"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "id": "b74937ce-7e08-4d7e-b8de-c8a3877dfa7d",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "   app_id                  app_name  review_id  language  \\\n",
      "0  292030  The Witcher 3: Wild Hunt   85185598  schinese   \n",
      "1  292030  The Witcher 3: Wild Hunt   85185250  schinese   \n",
      "2  292030  The Witcher 3: Wild Hunt   85185111  schinese   \n",
      "3  292030  The Witcher 3: Wild Hunt   85184605   english   \n",
      "4  292030  The Witcher 3: Wild Hunt   85184287  schinese   \n",
      "\n",
      "                                              review  timestamp_created  \\\n",
      "0                            不玩此生遗憾，RPG游戏里的天花板，太吸引人了         1611381629   \n",
      "1                                 拔DIAO无情打桩机--杰洛特!!!         1611381030   \n",
      "2                                              巫师3NB         1611380800   \n",
      "3  One of the best RPG's of all time, worthy of a...         1611379970   \n",
      "4                                                 大作         1611379427   \n",
      "\n",
      "   timestamp_updated  recommended  votes_helpful  votes_funny  ...  \\\n",
      "0         1611381629         True              0            0  ...   \n",
      "1         1611381030         True              0            0  ...   \n",
      "2         1611380800         True              0            0  ...   \n",
      "3         1611379970         True              0            0  ...   \n",
      "4         1611379427         True              0            0  ...   \n",
      "\n",
      "   steam_purchase  received_for_free  written_during_early_access  \\\n",
      "0            True              False                        False   \n",
      "1            True              False                        False   \n",
      "2            True              False                        False   \n",
      "3            True              False                        False   \n",
      "4            True              False                        False   \n",
      "\n",
      "      author.steamid  author.num_games_owned  author.num_reviews  \\\n",
      "0  76561199095369542                       6                   2   \n",
      "1  76561198949504115                      30                  10   \n",
      "2  76561199090098988                       5                   1   \n",
      "3  76561199054755373                       5                   3   \n",
      "4  76561199028326951                       7                   4   \n",
      "\n",
      "   author.playtime_forever  author.playtime_last_two_weeks  \\\n",
      "0                   1909.0                          1448.0   \n",
      "1                   2764.0                          2743.0   \n",
      "2                   1061.0                          1061.0   \n",
      "3                   5587.0                          3200.0   \n",
      "4                    217.0                            42.0   \n",
      "\n",
      "   author.playtime_at_review  author.last_played  \n",
      "0                     1909.0        1.611343e+09  \n",
      "1                     2674.0        1.611386e+09  \n",
      "2                     1060.0        1.611384e+09  \n",
      "3                     5524.0        1.611384e+09  \n",
      "4                      217.0        1.610788e+09  \n",
      "\n",
      "[5 rows x 22 columns]\n"
     ]
    }
   ],
   "source": [
    "import pandas as pd\n",
    "\n",
    "# Recreate the chunk_iterable to reinitialize it\n",
    "chunk_iterable = pd.read_csv('/Users/camillalabbate/Desktop/steam_reviews.csv', \n",
    "                             header=\"infer\", index_col=0, chunksize=4 * 10**6)\n",
    "\n",
    "first_chunk = next(chunk_iterable)\n",
    "\n",
    "# Print the first few rows of the first chunk to verify the data\n",
    "print(first_chunk.head())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "id": "1ea96e41-d345-44da-9e05-bec91df03223",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>app_id</th>\n",
       "      <th>app_name</th>\n",
       "      <th>review_id</th>\n",
       "      <th>language</th>\n",
       "      <th>review</th>\n",
       "      <th>timestamp_created</th>\n",
       "      <th>timestamp_updated</th>\n",
       "      <th>recommended</th>\n",
       "      <th>votes_helpful</th>\n",
       "      <th>votes_funny</th>\n",
       "      <th>...</th>\n",
       "      <th>steam_purchase</th>\n",
       "      <th>received_for_free</th>\n",
       "      <th>written_during_early_access</th>\n",
       "      <th>author.steamid</th>\n",
       "      <th>author.num_games_owned</th>\n",
       "      <th>author.num_reviews</th>\n",
       "      <th>author.playtime_forever</th>\n",
       "      <th>author.playtime_last_two_weeks</th>\n",
       "      <th>author.playtime_at_review</th>\n",
       "      <th>author.last_played</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>292030</td>\n",
       "      <td>The Witcher 3: Wild Hunt</td>\n",
       "      <td>85185598</td>\n",
       "      <td>schinese</td>\n",
       "      <td>不玩此生遗憾，RPG游戏里的天花板，太吸引人了</td>\n",
       "      <td>1611381629</td>\n",
       "      <td>1611381629</td>\n",
       "      <td>True</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>76561199095369542</td>\n",
       "      <td>6</td>\n",
       "      <td>2</td>\n",
       "      <td>1909.0</td>\n",
       "      <td>1448.0</td>\n",
       "      <td>1909.0</td>\n",
       "      <td>1.611343e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>292030</td>\n",
       "      <td>The Witcher 3: Wild Hunt</td>\n",
       "      <td>85185250</td>\n",
       "      <td>schinese</td>\n",
       "      <td>拔DIAO无情打桩机--杰洛特!!!</td>\n",
       "      <td>1611381030</td>\n",
       "      <td>1611381030</td>\n",
       "      <td>True</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>76561198949504115</td>\n",
       "      <td>30</td>\n",
       "      <td>10</td>\n",
       "      <td>2764.0</td>\n",
       "      <td>2743.0</td>\n",
       "      <td>2674.0</td>\n",
       "      <td>1.611386e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>292030</td>\n",
       "      <td>The Witcher 3: Wild Hunt</td>\n",
       "      <td>85185111</td>\n",
       "      <td>schinese</td>\n",
       "      <td>巫师3NB</td>\n",
       "      <td>1611380800</td>\n",
       "      <td>1611380800</td>\n",
       "      <td>True</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>76561199090098988</td>\n",
       "      <td>5</td>\n",
       "      <td>1</td>\n",
       "      <td>1061.0</td>\n",
       "      <td>1061.0</td>\n",
       "      <td>1060.0</td>\n",
       "      <td>1.611384e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>292030</td>\n",
       "      <td>The Witcher 3: Wild Hunt</td>\n",
       "      <td>85184605</td>\n",
       "      <td>english</td>\n",
       "      <td>One of the best RPG's of all time, worthy of a...</td>\n",
       "      <td>1611379970</td>\n",
       "      <td>1611379970</td>\n",
       "      <td>True</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>76561199054755373</td>\n",
       "      <td>5</td>\n",
       "      <td>3</td>\n",
       "      <td>5587.0</td>\n",
       "      <td>3200.0</td>\n",
       "      <td>5524.0</td>\n",
       "      <td>1.611384e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>292030</td>\n",
       "      <td>The Witcher 3: Wild Hunt</td>\n",
       "      <td>85184287</td>\n",
       "      <td>schinese</td>\n",
       "      <td>大作</td>\n",
       "      <td>1611379427</td>\n",
       "      <td>1611379427</td>\n",
       "      <td>True</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>76561199028326951</td>\n",
       "      <td>7</td>\n",
       "      <td>4</td>\n",
       "      <td>217.0</td>\n",
       "      <td>42.0</td>\n",
       "      <td>217.0</td>\n",
       "      <td>1.610788e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>292030</td>\n",
       "      <td>The Witcher 3: Wild Hunt</td>\n",
       "      <td>85184171</td>\n",
       "      <td>english</td>\n",
       "      <td>good story, good graphics. lots to do.</td>\n",
       "      <td>1611379264</td>\n",
       "      <td>1611379264</td>\n",
       "      <td>True</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>76561198170193529</td>\n",
       "      <td>11</td>\n",
       "      <td>1</td>\n",
       "      <td>823.0</td>\n",
       "      <td>823.0</td>\n",
       "      <td>823.0</td>\n",
       "      <td>1.611379e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>292030</td>\n",
       "      <td>The Witcher 3: Wild Hunt</td>\n",
       "      <td>85184064</td>\n",
       "      <td>english</td>\n",
       "      <td>dis gud,</td>\n",
       "      <td>1611379091</td>\n",
       "      <td>1611379091</td>\n",
       "      <td>True</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>76561198119302812</td>\n",
       "      <td>27</td>\n",
       "      <td>2</td>\n",
       "      <td>4192.0</td>\n",
       "      <td>3398.0</td>\n",
       "      <td>4192.0</td>\n",
       "      <td>1.611352e+09</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>7 rows × 22 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   app_id                  app_name  review_id  language  \\\n",
       "0  292030  The Witcher 3: Wild Hunt   85185598  schinese   \n",
       "1  292030  The Witcher 3: Wild Hunt   85185250  schinese   \n",
       "2  292030  The Witcher 3: Wild Hunt   85185111  schinese   \n",
       "3  292030  The Witcher 3: Wild Hunt   85184605   english   \n",
       "4  292030  The Witcher 3: Wild Hunt   85184287  schinese   \n",
       "5  292030  The Witcher 3: Wild Hunt   85184171   english   \n",
       "6  292030  The Witcher 3: Wild Hunt   85184064   english   \n",
       "\n",
       "                                              review  timestamp_created  \\\n",
       "0                            不玩此生遗憾，RPG游戏里的天花板，太吸引人了         1611381629   \n",
       "1                                 拔DIAO无情打桩机--杰洛特!!!         1611381030   \n",
       "2                                              巫师3NB         1611380800   \n",
       "3  One of the best RPG's of all time, worthy of a...         1611379970   \n",
       "4                                                 大作         1611379427   \n",
       "5             good story, good graphics. lots to do.         1611379264   \n",
       "6                                           dis gud,         1611379091   \n",
       "\n",
       "   timestamp_updated  recommended  votes_helpful  votes_funny  ...  \\\n",
       "0         1611381629         True              0            0  ...   \n",
       "1         1611381030         True              0            0  ...   \n",
       "2         1611380800         True              0            0  ...   \n",
       "3         1611379970         True              0            0  ...   \n",
       "4         1611379427         True              0            0  ...   \n",
       "5         1611379264         True              0            0  ...   \n",
       "6         1611379091         True              0            0  ...   \n",
       "\n",
       "   steam_purchase  received_for_free  written_during_early_access  \\\n",
       "0            True              False                        False   \n",
       "1            True              False                        False   \n",
       "2            True              False                        False   \n",
       "3            True              False                        False   \n",
       "4            True              False                        False   \n",
       "5            True              False                        False   \n",
       "6            True              False                        False   \n",
       "\n",
       "      author.steamid  author.num_games_owned  author.num_reviews  \\\n",
       "0  76561199095369542                       6                   2   \n",
       "1  76561198949504115                      30                  10   \n",
       "2  76561199090098988                       5                   1   \n",
       "3  76561199054755373                       5                   3   \n",
       "4  76561199028326951                       7                   4   \n",
       "5  76561198170193529                      11                   1   \n",
       "6  76561198119302812                      27                   2   \n",
       "\n",
       "   author.playtime_forever  author.playtime_last_two_weeks  \\\n",
       "0                   1909.0                          1448.0   \n",
       "1                   2764.0                          2743.0   \n",
       "2                   1061.0                          1061.0   \n",
       "3                   5587.0                          3200.0   \n",
       "4                    217.0                            42.0   \n",
       "5                    823.0                           823.0   \n",
       "6                   4192.0                          3398.0   \n",
       "\n",
       "   author.playtime_at_review  author.last_played  \n",
       "0                     1909.0        1.611343e+09  \n",
       "1                     2674.0        1.611386e+09  \n",
       "2                     1060.0        1.611384e+09  \n",
       "3                     5524.0        1.611384e+09  \n",
       "4                      217.0        1.610788e+09  \n",
       "5                      823.0        1.611379e+09  \n",
       "6                     4192.0        1.611352e+09  \n",
       "\n",
       "[7 rows x 22 columns]"
      ]
     },
     "execution_count": 46,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "first_chunk.head(7)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "id": "3f98ee74-7826-4954-8aa7-b39ceaccd26a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>app_id</th>\n",
       "      <th>app_name</th>\n",
       "      <th>review_id</th>\n",
       "      <th>language</th>\n",
       "      <th>review</th>\n",
       "      <th>timestamp_created</th>\n",
       "      <th>timestamp_updated</th>\n",
       "      <th>recommended</th>\n",
       "      <th>votes_helpful</th>\n",
       "      <th>votes_funny</th>\n",
       "      <th>...</th>\n",
       "      <th>steam_purchase</th>\n",
       "      <th>received_for_free</th>\n",
       "      <th>written_during_early_access</th>\n",
       "      <th>author.steamid</th>\n",
       "      <th>author.num_games_owned</th>\n",
       "      <th>author.num_reviews</th>\n",
       "      <th>author.playtime_forever</th>\n",
       "      <th>author.playtime_last_two_weeks</th>\n",
       "      <th>author.playtime_at_review</th>\n",
       "      <th>author.last_played</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3999996</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3999997</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3999998</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3999999</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4000000</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>4000000 rows × 22 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "         app_id  app_name  review_id  language  review  timestamp_created  \\\n",
       "0         False     False      False     False   False              False   \n",
       "1         False     False      False     False   False              False   \n",
       "2         False     False      False     False   False              False   \n",
       "3         False     False      False     False   False              False   \n",
       "4         False     False      False     False   False              False   \n",
       "...         ...       ...        ...       ...     ...                ...   \n",
       "3999996   False     False      False     False   False              False   \n",
       "3999997   False     False      False     False   False              False   \n",
       "3999998   False     False      False     False   False              False   \n",
       "3999999   False     False      False     False   False              False   \n",
       "4000000   False     False      False     False   False              False   \n",
       "\n",
       "         timestamp_updated  recommended  votes_helpful  votes_funny  ...  \\\n",
       "0                    False        False          False        False  ...   \n",
       "1                    False        False          False        False  ...   \n",
       "2                    False        False          False        False  ...   \n",
       "3                    False        False          False        False  ...   \n",
       "4                    False        False          False        False  ...   \n",
       "...                    ...          ...            ...          ...  ...   \n",
       "3999996              False        False          False        False  ...   \n",
       "3999997              False        False          False        False  ...   \n",
       "3999998              False        False          False        False  ...   \n",
       "3999999              False        False          False        False  ...   \n",
       "4000000              False        False          False        False  ...   \n",
       "\n",
       "         steam_purchase  received_for_free  written_during_early_access  \\\n",
       "0                 False              False                        False   \n",
       "1                 False              False                        False   \n",
       "2                 False              False                        False   \n",
       "3                 False              False                        False   \n",
       "4                 False              False                        False   \n",
       "...                 ...                ...                          ...   \n",
       "3999996           False              False                        False   \n",
       "3999997           False              False                        False   \n",
       "3999998           False              False                        False   \n",
       "3999999           False              False                        False   \n",
       "4000000           False              False                        False   \n",
       "\n",
       "         author.steamid  author.num_games_owned  author.num_reviews  \\\n",
       "0                 False                   False               False   \n",
       "1                 False                   False               False   \n",
       "2                 False                   False               False   \n",
       "3                 False                   False               False   \n",
       "4                 False                   False               False   \n",
       "...                 ...                     ...                 ...   \n",
       "3999996           False                   False               False   \n",
       "3999997           False                   False               False   \n",
       "3999998           False                   False               False   \n",
       "3999999           False                   False               False   \n",
       "4000000           False                   False               False   \n",
       "\n",
       "         author.playtime_forever  author.playtime_last_two_weeks  \\\n",
       "0                          False                           False   \n",
       "1                          False                           False   \n",
       "2                          False                           False   \n",
       "3                          False                           False   \n",
       "4                          False                           False   \n",
       "...                          ...                             ...   \n",
       "3999996                    False                           False   \n",
       "3999997                    False                           False   \n",
       "3999998                    False                           False   \n",
       "3999999                    False                           False   \n",
       "4000000                    False                           False   \n",
       "\n",
       "         author.playtime_at_review  author.last_played  \n",
       "0                            False               False  \n",
       "1                            False               False  \n",
       "2                            False               False  \n",
       "3                            False               False  \n",
       "4                            False               False  \n",
       "...                            ...                 ...  \n",
       "3999996                      False               False  \n",
       "3999997                      False               False  \n",
       "3999998                      False               False  \n",
       "3999999                      False               False  \n",
       "4000000                      False               False  \n",
       "\n",
       "[4000000 rows x 22 columns]"
      ]
     },
     "execution_count": 52,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "first_chunk.isna()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "id": "465e22cc-665a-4ef4-be8b-a60cd5566b40",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "Int64Index: 4000000 entries, 0 to 4000000\n",
      "Data columns (total 22 columns):\n",
      " #   Column                          Dtype  \n",
      "---  ------                          -----  \n",
      " 0   app_id                          int64  \n",
      " 1   app_name                        object \n",
      " 2   review_id                       int64  \n",
      " 3   language                        object \n",
      " 4   review                          object \n",
      " 5   timestamp_created               int64  \n",
      " 6   timestamp_updated               int64  \n",
      " 7   recommended                     bool   \n",
      " 8   votes_helpful                   int64  \n",
      " 9   votes_funny                     int64  \n",
      " 10  weighted_vote_score             float64\n",
      " 11  comment_count                   int64  \n",
      " 12  steam_purchase                  bool   \n",
      " 13  received_for_free               bool   \n",
      " 14  written_during_early_access     bool   \n",
      " 15  author.steamid                  int64  \n",
      " 16  author.num_games_owned          int64  \n",
      " 17  author.num_reviews              int64  \n",
      " 18  author.playtime_forever         float64\n",
      " 19  author.playtime_last_two_weeks  float64\n",
      " 20  author.playtime_at_review       float64\n",
      " 21  author.last_played              float64\n",
      "dtypes: bool(4), float64(5), int64(10), object(3)\n",
      "memory usage: 595.1+ MB\n"
     ]
    }
   ],
   "source": [
    "first_chunk.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "id": "678fe943-f35d-4701-9a4d-9484020156de",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "app_id                               0\n",
       "app_name                             0\n",
       "review_id                            0\n",
       "language                             0\n",
       "review                            5896\n",
       "timestamp_created                    0\n",
       "timestamp_updated                    0\n",
       "recommended                          0\n",
       "votes_helpful                        0\n",
       "votes_funny                          0\n",
       "weighted_vote_score                  0\n",
       "comment_count                        0\n",
       "steam_purchase                       0\n",
       "received_for_free                    0\n",
       "written_during_early_access          0\n",
       "author.steamid                       0\n",
       "author.num_games_owned               0\n",
       "author.num_reviews                   0\n",
       "author.playtime_forever              0\n",
       "author.playtime_last_two_weeks       0\n",
       "author.playtime_at_review         6690\n",
       "author.last_played                   0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 60,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "first_chunk.isna().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "id": "8487b446-9466-4d50-bb61-3b2748ec0c85",
   "metadata": {},
   "outputs": [],
   "source": [
    "df=pd.read_csv('/Users/camillalabbate/Desktop/steam_reviews.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "id": "24e5c324-c493-4f49-aaaa-c9a345587bc2",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 21747371 entries, 0 to 21747370\n",
      "Data columns (total 23 columns):\n",
      " #   Column                          Dtype  \n",
      "---  ------                          -----  \n",
      " 0   Unnamed: 0                      int64  \n",
      " 1   app_id                          int64  \n",
      " 2   app_name                        object \n",
      " 3   review_id                       int64  \n",
      " 4   language                        object \n",
      " 5   review                          object \n",
      " 6   timestamp_created               int64  \n",
      " 7   timestamp_updated               int64  \n",
      " 8   recommended                     bool   \n",
      " 9   votes_helpful                   int64  \n",
      " 10  votes_funny                     int64  \n",
      " 11  weighted_vote_score             float64\n",
      " 12  comment_count                   int64  \n",
      " 13  steam_purchase                  bool   \n",
      " 14  received_for_free               bool   \n",
      " 15  written_during_early_access     bool   \n",
      " 16  author.steamid                  int64  \n",
      " 17  author.num_games_owned          int64  \n",
      " 18  author.num_reviews              int64  \n",
      " 19  author.playtime_forever         float64\n",
      " 20  author.playtime_last_two_weeks  float64\n",
      " 21  author.playtime_at_review       float64\n",
      " 22  author.last_played              float64\n",
      "dtypes: bool(4), float64(5), int64(11), object(3)\n",
      "memory usage: 3.2+ GB\n"
     ]
    }
   ],
   "source": [
    "df.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "id": "6872df0f-1ac6-4c31-8344-296612fdc10e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Unnamed: 0                            0\n",
       "app_id                                0\n",
       "app_name                              0\n",
       "review_id                             0\n",
       "language                              0\n",
       "review                            33742\n",
       "timestamp_created                     0\n",
       "timestamp_updated                     0\n",
       "recommended                           0\n",
       "votes_helpful                         0\n",
       "votes_funny                           0\n",
       "weighted_vote_score                   0\n",
       "comment_count                         0\n",
       "steam_purchase                        0\n",
       "received_for_free                     0\n",
       "written_during_early_access           0\n",
       "author.steamid                        0\n",
       "author.num_games_owned                0\n",
       "author.num_reviews                    0\n",
       "author.playtime_forever               2\n",
       "author.playtime_last_two_weeks        2\n",
       "author.playtime_at_review         25682\n",
       "author.last_played                    2\n",
       "dtype: int64"
      ]
     },
     "execution_count": 66,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 118,
   "id": "586db1d9-513d-45a7-a51c-fa48d56e979b",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0          2021-01-23 06:00:29\n",
      "1          2021-01-23 05:50:30\n",
      "2          2021-01-23 05:46:40\n",
      "3          2021-01-23 05:32:50\n",
      "4          2021-01-23 05:23:47\n",
      "                   ...        \n",
      "21747366   2020-03-23 18:05:04\n",
      "21747367   2020-03-23 18:04:53\n",
      "21747368   2020-03-23 18:04:33\n",
      "21747369   2020-03-23 18:03:51\n",
      "21747370   2020-03-23 18:01:45\n",
      "Name: timestamp_created, Length: 21747371, dtype: datetime64[ns]\n"
     ]
    }
   ],
   "source": [
    "df['timestamp_created']=pd.to_datetime(df['timestamp_created'],unit='s',errors='coerce')\n",
    "print(df['timestamp_created'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 110,
   "id": "af412dd1-f2e3-488d-9631-261bbab10765",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "datetime64[ns]\n",
      "Empty DataFrame\n",
      "Columns: [Unnamed: 0, app_id, app_name, review_id, language, review, timestamp_created, timestamp_updated, recommended, votes_helpful, votes_funny, weighted_vote_score, comment_count, steam_purchase, received_for_free, written_during_early_access, author.steamid, author.num_games_owned, author.num_reviews, author.playtime_forever, author.playtime_last_two_weeks, author.playtime_at_review, author.last_played]\n",
      "Index: []\n",
      "\n",
      "[0 rows x 23 columns]\n"
     ]
    }
   ],
   "source": [
    "print(df['timestamp_created'].dtypes)\n",
    "print(df[df['timestamp_created'].isna()])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 120,
   "id": "5c07df34-cce0-4330-a842-bed5f64561a2",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0           1\n",
      "1           1\n",
      "2           1\n",
      "3           1\n",
      "4           1\n",
      "           ..\n",
      "21747366    3\n",
      "21747367    3\n",
      "21747368    3\n",
      "21747369    3\n",
      "21747370    3\n",
      "Name: Month, Length: 21747371, dtype: int64\n"
     ]
    }
   ],
   "source": [
    "df['Month'] = df['timestamp_created'].dt.month\n",
    "print(df['Month'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 124,
   "id": "df0e951e-780b-4daa-893d-55826f965c3c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0            6\n",
      "1            5\n",
      "2            5\n",
      "3            5\n",
      "4            5\n",
      "            ..\n",
      "21747366    18\n",
      "21747367    18\n",
      "21747368    18\n",
      "21747369    18\n",
      "21747370    18\n",
      "Name: hour, Length: 21747371, dtype: int64\n"
     ]
    }
   ],
   "source": [
    "df['hour'] = df['timestamp_created'].dt.hour\n",
    "print(df['hour'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 128,
   "id": "803acdc6-30ac-4329-9e78-cd0bebaab797",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1000x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "monthly_rev=df.groupby('Month').size()\n",
    "plt.figure(figsize=(10, 6))\n",
    "sns.lineplot(x=monthly_rev.index, y=monthly_rev.values)\n",
    "plt.title('reviews for each month')\n",
    "plt.xlabel('month')\n",
    "plt.ylabel('reviews value')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "raw",
   "id": "8ff674b5-df4c-44a6-bda0-109ad1e0440a",
   "metadata": {},
   "source": [
    "Through the line chart, it is possible to observe the number and trend of reviews for each month. Between November and December, a significantly high number of reviews was recorded, ranging from 3,500,000 to 4,000,000, reaching the highest peak in November, while the lowest peak in reviews occurred around the month of September."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 130,
   "id": "c32848d7-aa5c-45b0-a7a7-ff91b846e0e7",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Month\n",
      "1     2131494\n",
      "2     1338661\n",
      "3     1520481\n",
      "4     1317677\n",
      "5     1299069\n",
      "6     1935001\n",
      "7     1896400\n",
      "8     1269281\n",
      "9     1212994\n",
      "10    1482930\n",
      "11    3760670\n",
      "12    2582713\n",
      "dtype: int64\n"
     ]
    }
   ],
   "source": [
    "print(monthly_rev)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "d5797fd1-8ed9-42f4-b2f6-f2fc11b9ab34",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
